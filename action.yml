name: 'Docker Bump'
description: 'Trigger a GitHub workflow whenever a target image is out-of-date with its dependent base image'
inputs:
  target-image-name:
    description: 'Name of the image to check'
    required: true
  base-image-name:
    description: 'Name of the base image the target image is based on'
    required: true
  os:
    type: choice
    description: 'Operating system of the image'
    default: linux
    options:
    - linux
    - windows
  arch:
    description: 'Default architecture of the image'
    default: amd64
  repository:
    description: 'Name of GitHub repository containing the workflow to trigger'
    required: true
  event-type:
    description: 'Name of the event that will be sent for the repository dispatch'
    default: 'base-image-update'
  token:
    description: 'GITHUB_TOKEN or a `repo` scoped Personal Access Token (PAT) used to send the repository dispatch'
    required: true
outputs:
  dispatch-sent:
    description: "A value indicating whether a repository dispatch was sent"
    value: ${{ steps.report-status.outputs.dispatch-sent }}
runs:
  using: "composite"
  steps:
    - name: Check Base Image
      shell: pwsh
      run: |
        $targetImage = "${{ inputs.target-image-name }}"
        $baseImage = "${{ inputs.base-image-name }}"
        $os = "${{ inputs.os }}"
        $arch = "${{ inputs.arch }}"

        $result = docker run --rm ghcr.io/mthalman/dredge image compare layers --output json $baseImage $targetImage --os $os --arch $arch | ConvertFrom-Json
        $value = "$($result.Summary.TargetIncludesAllBaseLayers)".ToLower()
        
        echo "TRIGGER_WORKFLOW=$value" >> "$env:GITHUB_ENV"
    - name: Repository Dispatch
      if: env.TRIGGER_WORKFLOW == 'false'
      uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ inputs.token }}
        repository: ${{ inputs.repository }}
        event-type: ${{ inputs.event-type }}
    - name: Report Status
      id: report-status
      shell: pwsh
      run: |
        if ($env:TRIGGER_WORKFLOW -eq "false") {
          echo "A repository dispatch was sent to '${{ inputs.repository }}' with event type '${{ inputs.event-type }}'."
        } else {
          echo "No repository dispatch was sent."
        }

        echo "dispatch-sent=$env:TRIGGER_WORKFLOW" >> "$env:GITHUB_OUTPUT"
